using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Text;
using HtmlAgilityPack;

namespace Prawnotron
{
    /*static void Main(){
            Statue ustawaZPliku = new Ustawa("nazwa_pliku.html");
            Statue ustawaZeStringu = new Ustawa("<html>.....</html>", true);
            ustawaZPliku.pages[0] <- dostep do zawartosci strony pierwszej ustawy
        }*/ //<- do maina

    /// <summary>
    ///
    /// </summary>
    /// <autogeneratedoc />
    public class Statue
    {
        HtmlDocument HtmlFromFile { get; }

        public List<string> Pages { get; }

        /// <summary>
        /// Konstruktor
        /// </summary>
        /// <param name="a"></param>
        /// <param name="readFromString"></param>
        public Statue(string a, bool readFromString = false)
        {
            Pages = new List<string>();
            HtmlDocument html = readFromString ? ReadHtmlDocumentFromString(a) : ReadHtmlDocumentFromFile(a);
            HtmlFromFile = html;
            ReadStatuePagesFromHtml(HtmlFromFile); //przerabia html na strony
        }

        void ReadStatuePagesFromHtml(HtmlDocument document)
        {
            HtmlNodeCollection htmlNodes = document.DocumentNode.SelectNodes("(//div[@class='pf w0 h0'])");
                //wybieramy wszystkie 'div' o takiej samej klasie
            // XPATH: http://ricostacruz.com/cheatsheets/xpath.html
            foreach (var node in htmlNodes)
            {
                string pageContent = "";
                HtmlNodeCollection pageElements = node.SelectNodes("(div/div[position()>2])");
                foreach (var element in pageElements)
                {
                    if (element.InnerText != "")
                        //jezeli innerText nie jest pusty - (dokument zawiera duzo pustych spanów)
                    {
                        pageContent += element.InnerText; //dodaje tekst do zawartosci strony
                    }
                }

                Pages.Add(pageContent); //strona dodana do listy stron
            }
        }

        static HtmlDocument ReadHtmlDocumentFromFile(string documentPath)
        {
            HtmlDocument doc = new HtmlDocument();
            doc.Load(documentPath, Encoding.UTF8);
            return doc;
        }

        HtmlDocument ReadHtmlDocumentFromString(string html)
        {
            HtmlDocument doc = new HtmlDocument();
            doc.LoadHtml(html);
            return doc;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();

            foreach (var page in Pages)
            {
                sb.Append(page);
            }

            return sb.ToString();
        }

        /// <summary>
        /// 
        /// </summary>
        public void Zapisz()
        {
            StreamWriter file = new StreamWriter("ustawa.txt", true);
            file.WriteLine(ToString());
            file.Close();
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="doc"></param>
        /// <param name="a"></param>
        public void Wyszukaj(string doc, string a)
        {
            var list = new List<string>();
            string pattern = "Art. " + a;
            var index = 0;
            int num1 = int.Parse(a);
            int num2 = num1 + 1;
            string d = Convert.ToString(num2);
            string pattern2 = "Art. " + d;
            while (true)

            {
                int b = doc.IndexOf(pattern, index, StringComparison.Ordinal);
                if (b == -1)
                    break;
                index = b + pattern.Length;

                int c = doc.IndexOf(pattern2, index, StringComparison.Ordinal);

                list.Add(pattern + doc.Substring(index, c - index));
            }
            foreach (string line in list)
            {
                Debug.WriteLine(line);
            }
        }

        /*static void Main(string[] args)
                {
                    
                   Statue ustawa = new Statue("strona_3.html");
                    string p;
                    string ustawaString = "";
                        foreach (var page in ustawa.pages)
                    {
                        
                        p = Convert.ToString(page);
                        ustawaString+= p;
        
                    }
                
                   ustawa.Wyszukaj(ustawaString, "44");
                 
        
                Console.ReadKey();
                }
            }*/
    }
}
