using System.Diagnostics.CodeAnalysis;
using System.IO;
using System.Windows;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;

namespace Prawnotron
{
    /// <summary>
    ///     Model ustawy pobieranej z API
    /// </summary>
    /// <autogeneratedoc />
    [SuppressMessage("ReSharper", "InconsistentNaming")]

    public class Ustawa
    {
        /// <summary>
        /// Ścieżka zapisu plików HTML z treścią ustawy.
        /// </summary>
        /// <seealso cref="Statue"/>
        [JsonIgnore]
        public string Tresc_path { get; set; }

        /// <summary>
        ///     ID ustawy w API
        /// </summary>
        public string Id { get; set; }

        /// <summary>
        ///     ID używane do pobrania treści ustawy
        /// </summary>
        public string Dokument_Id { get; set; }

        /// <summary>
        /// ID dokumentu w systemie ISAP
        /// </summary>
        public string Isap_Plik_Dokument_Id { get; set; }
        /// <summary>
        /// Gets or sets the isap identifier.
        /// </summary>
        /// <value>
        /// The isap identifier.
        /// </value>
        /// <autogeneratedoc />
        public string Isap_Id { get; set; }
        /// <summary>
        /// Gets or sets the status identifier.
        /// </summary>
        /// <value>
        /// The status identifier.
        /// </value>
        /// <autogeneratedoc />
        public string Status_Id { get; set; }
        /// <summary>
        /// Gets or sets the rok.
        /// </summary>
        /// <value>
        /// The rok.
        /// </value>
        /// <autogeneratedoc />
        public int Rok { get; set; }
        /// <summary>
        /// Gets or sets the poz.
        /// </summary>
        /// <value>
        /// The poz.
        /// </value>
        /// <autogeneratedoc />
        public int Poz { get; set; }
        /// <summary>
        /// Gets or sets the nr.
        /// </summary>
        /// <value>
        /// The nr.
        /// </value>
        /// <autogeneratedoc />
        public int Nr { get; set; }
        /// <summary>
        /// Gets or sets the sygnatura.
        /// </summary>
        /// <value>
        /// The sygnatura.
        /// </value>
        /// <autogeneratedoc />
        public string Sygnatura { get; set; }
        /// <summary>
        /// Gets or sets the data publikacji.
        /// </summary>
        /// <value>
        /// The data publikacji.
        /// </value>
        /// <autogeneratedoc />
        public string Data_Publikacji { get; set; }
        /// <summary>
        /// Gets or sets the data wydania.
        /// </summary>
        /// <value>
        /// The data wydania.
        /// </value>
        /// <autogeneratedoc />
        public string Data_Wydania { get; set; }
        /// <summary>
        /// Gets or sets the data wejscia w zycie.
        /// </summary>
        /// <value>
        /// The data wejscia w zycie.
        /// </value>
        /// <autogeneratedoc />
        public string Data_Wejscia_W_Zycie { get; set; }
        /// <summary>
        /// Gets or sets the label.
        /// </summary>
        /// <value>
        /// The label.
        /// </value>
        /// <autogeneratedoc />
        public string Label { get; set; }

        /// <summary>
        ///     Tytuł ustawy.
        /// </summary>
        public string Tytul { get; set; }

        /// <summary>
        ///     Tytuł skrócony ustawy.
        /// </summary>
        /// <autogeneratedoc />
        public string tytul_skrocony { get; set; }
        /// <summary>
        /// Gets or sets the autor nazwa.
        /// </summary>
        /// <value>
        /// The autor nazwa.
        /// </value>
        /// <autogeneratedoc />
        public string Autor_Nazwa { get; set; }
        /// <summary>
        /// Gets or sets the zrodlo.
        /// </summary>
        /// <value>
        /// The zrodlo.
        /// </value>
        /// <autogeneratedoc />
        public string Zrodlo { get; set; }

        /// <summary>
        /// Gets or sets the kodeks.
        /// </summary>
        /// <value>
        /// The kodeks.
        /// </value>
        /// <autogeneratedoc />
        public string Kodeks { get; set; }
        /// <summary>
        /// Gets or sets the liczba zalacznikow.
        /// </summary>
        /// <value>
        /// The liczba zalacznikow.
        /// </value>
        /// <autogeneratedoc />
        public int Liczba_zalacznikow { get; set; }
        /// <summary>
        /// Gets or sets the typ nazwa.
        /// </summary>
        /// <value>
        /// The typ nazwa.
        /// </value>
        /// <autogeneratedoc />
        public string Typ_nazwa { get; set; }

        /// <summary>
        ///     Metoda usuwająca nazwę datasetu z parametrów we wskazanym pliku <c>JSON</c>
        /// </summary>
        /// <param name="jsonPath">ścieżka do pliku <c>JSON</c></param>
        /// <seealso cref="File" />
        /// <param name="dataset">nazwa datasetu z API, np. prawo, dziennik_ustaw. Domyślnie "dziennik_ustaw"</param>
        static void RemoveDatasetName(string jsonPath, string dataset = "dziennik_ustaw.")
        {
            try
            {
                string text = File.ReadAllText(jsonPath);
                text = text.Replace(dataset, "");
                File.WriteAllText(jsonPath, text);
            }
            catch (FileNotFoundException ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        /// <summary>
        ///     Deserialuje pliki <c>JSON</c> do klasy Ustawa <see cref="Ustawa" />, korzystając z zamiany na
        /// </summary>
        /// <param name="i">ścieżka do pliku <c>JSON</c> <seealso cref="int" /></param>
        /// <returns>Deserializowany obiekt klasy Ustawa</returns>
       public static Ustawa ParseUstawa(int i)
        {
            string p = $"../../Json/Ustawa_{i}.json";
            RemoveDatasetName(p);

            string ustStr = File.ReadAllText(p);

            try
            {
               JObject mpResult = JObject.Parse(ustStr);
                JToken result;
                mpResult.TryGetValue("data", out result);
                if (result != null)
                {
                    var ustawa = JsonConvert.DeserializeObject<Ustawa>(result.ToString());
                    //dochodzi tu, po czym wraca do wywołania RemoveDatasetName ?!
                    return ustawa;
                }
                else
                    throw new JsonException();
            }
            catch (JsonException jex)
            {
                MessageBox.Show(jex.Message);
                return null;
            }
            catch (Exception e)
            {
                MessageBox.Show(e.Message);
                return null;
            }
        }
    }
 }
